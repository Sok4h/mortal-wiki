{"version":3,"sources":["components/Link/Link.tsx","components/Header/logomk.svg","components/Header/Header.tsx","components/GameCard/GameCard.tsx","components/GameForm/GameForm.tsx","components/Banner/Banner.tsx","components/Arenas/Arenas.tsx","components/Character/Character.tsx","components/Game_Details/Game_Details.tsx","components/CharacterForm/CharacterForm.tsx","components/Character_Details/Character_Details.tsx","components/ArenasForm/ArenasForm.tsx","utils/theme.ts","components/ArenaDetails/ArenaDetails.tsx","App.tsx","utils/getChartData.ts","reportWebVitals.ts","index.tsx"],"names":["Link","props","className","active","to","url","text","Header","src","logomk","alt","GameCard","name","img","id","history","useHistory","Card","sx","minWidth","onClick","push","CardActionArea","CardMedia","component","height","image","CardContent","bgcolor","Typography","textAlign","fontSize","gutterBottom","variant","GameForm","onCreate","onEdit","type","gameElems","editId","editElem","find","elem","React","setName","year","setYear","setImg","description","setDescription","onSubmit","event","preventDefault","alert","Math","random","parseInt","TextField","label","onChange","target","value","Button","Banner","Character","arenas","map","arena","maxWidth","characters","char","width","minHeight","color","Game_Details","list","characterOptions","arenasOptions","onAddCharacters","onAddArenas","onDelete","charactersState","setCharactersState","arenasState","setArenasState","idString","useParams","parseFloat","Autocomplete","multiple","disableClearable","style","options","getOptionLabel","option","renderInput","params","placeholder","values","transformed","isOptionEqualToValue","CharacterForm","characterElems","realm","setRealm","biography","setBiography","Character_Details","games","gamesArena","game","gameArena","ArenasForm","addTagOption","tagOptions","arenaElems","initialTags","tagString","tags","setTags","tagsStrings","obj","conceptArt","freeSolo","op","theme","createTheme","palette","primary","main","contrastText","secondary","ArenaDetails","concept","i","App","useState","gameFormType","setGameFormType","characterFormType","setCharacterFormType","arenaFormType","setArenaFormType","editIdGame","setEditIdGame","editIdArena","setEditIdArena","editIdCharacter","setEditIdCharacter","setGameElems","charactersElems","setCharacters","arenasElems","setArenas","initialCharacters","initialArenas","setCharacterOptions","setArenasOptions","setTagOptions","data","counters2","counters","characterNames","forEach","character","console","log","labels","datasets","Object","backgroundColor","borderColor","getChartData","path","editgamesElems","gameElemsCopy","slice","editIndex","findIndex","newGameElem","arrayCopy","editcharacterElems","characterElemsCopy","newCharaterElem","newCharacterOption","editarenaElems","arenaElemsCopy","newArenasElem","newArenaOption","newTagOption","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","title","display","deleteId","filter","gameId","charactersId","charactersObj","arenasId","arenasObj","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6a1b66c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Link.css'\r\nimport {Link as Rlink} from 'react-router-dom'\r\n\r\ninterface LinkProps {\r\n    text: string;\r\n    active?: boolean;\r\n    url: string;\r\n}\r\n\r\nexport const Link: React.FC<LinkProps> = (props) => {\r\n\r\n    let className = \"Link\";\r\n\r\n    if (props.active) {\r\n        className += \" Link-active\";\r\n    }\r\n    return <Rlink className={className} to={props.url}>{props.text}</Rlink>;\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logomk.4640112d.svg\";","import React from \"react\";\r\nimport { Link } from '../Link/Link';\r\nimport logomk from './logomk.svg'\r\nimport './Header.css'\r\n\r\ninterface HeaderProps {\r\n\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ }) => {\r\n\r\n    return <header className=\"headerApp\">\r\n        <div className=\"logoContainer\">\r\n        <img className=\"logo\" src={logomk} alt=\"\" />\r\n        </div>\r\n        <Link text=\"Home\" url=\"/home\" ></Link>\r\n        <Link text=\"Form\" url=\"/form\" ></Link>\r\n        <Link text=\"Personajes\" url=\"/characters\" ></Link>\r\n        <Link text=\"Arenas\" url=\"/arenas\" ></Link>\r\n    </header>;\r\n}\r\n\r\nexport default Header;","import * as React from 'react';\r\nimport './GameCard.css'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardMedia, CardContent, Typography } from '@mui/material';\r\n\r\nexport interface GameCardProps {\r\n  id: number,\r\n  name: string;\r\n  img: string;\r\n  year?: number;\r\n  description?: string;\r\n  \r\n}\r\n\r\n\r\nconst GameCard: React.FC<GameCardProps> = ({ name, img, id }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleView: React.MouseEventHandler<HTMLDivElement> = () => {\r\n    history.push(`/details/${id}`);\r\n  }\r\n\r\n \r\n\r\n  return <Card sx={{ minWidth: 150 }} onClick={handleView}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"150\"\r\n        image={img}\r\n        alt=\"\"\r\n      />\r\n      <CardContent\r\n\r\n        sx={{\r\n          bgcolor: \"#fff\"\r\n        }}\r\n      >\r\n        <Typography textAlign=\"center\" fontSize=\"1rem\" gutterBottom variant=\"h5\" component=\"div\">\r\n          {name}\r\n        </Typography>\r\n        \r\n      </CardContent>\r\n    </CardActionArea>\r\n    \r\n  </Card>\r\n\r\n\r\n\r\n   \r\n\r\n    ;\r\n}\r\n\r\nexport default GameCard;","import { Button, TextField } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GameElemObj } from '../../types/GameElemObj';\r\nimport { GameCardProps } from '../GameCard/GameCard'\r\nimport './GameForm.css'\r\n\r\ninterface GameFormProps {\r\n\r\n  editId: number | null;\r\n  onCreate: (newGameElem: GameCardProps) => void;\r\n  onEdit: (id: number, editGameElem: { name: string, description: string }) => void;\r\n  type: 'create' | 'edit';\r\n  gameElems: GameElemObj[];\r\n\r\n}\r\n\r\nconst GameForm: React.FC<GameFormProps> = ({ onCreate,onEdit, type, gameElems, editId }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const editElem = gameElems.find((elem) => {\r\n    return elem.id === editId;\r\n  });\r\n\r\n  const [name, setName] = React.useState(editElem?.name || '');\r\n  const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const [year, setYear] = React.useState(\"\");\r\n  const handleYearChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setYear(event.target.value);\r\n  }\r\n\r\n\r\n  const [img, setImg] = React.useState(editElem?.img || '');\r\n  const handleImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setImg(event.target.value);\r\n  }\r\n\r\n  const [description, setDescription] = React.useState(editElem?.description || '');\r\n  const handleDescriptionChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    if (name === '' || description === \"\" || img === \"\") {\r\n\r\n      alert(\"Please enter all fields\")\r\n    } else {\r\n\r\n      if (type === 'create') {\r\n        onCreate({\r\n          id: Math.random(),\r\n          name: name,\r\n          img: img,\r\n          year: parseInt(year),\r\n          description: description\r\n\r\n        });\r\n      }\r\n\r\n      else if (type === 'edit') {\r\n\r\n        onEdit(editId!, { name: name,description: description});\r\n        history.push('/home');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (<form className=\"GameForm\" onSubmit={handleSubmit}>\r\n\r\n    <TextField id=\"outlined-basic\" label=\"Game name\" variant=\"outlined\" onChange={handleNameChange} value={name} />\r\n    <TextField id=\"outlined-basic\" label=\"Image url\" variant=\"outlined\" onChange={handleImgChange} value={img} />\r\n    <TextField id=\"outlined-basic\" label=\"Game year\" type=\"number\" variant=\"outlined\" onChange={handleYearChange} value={year} />\r\n    <TextField id=\"outlined-basic\" label=\"Game description\" variant=\"outlined\" onChange={handleDescriptionChange} value={description} />\r\n    <Button type=\"submit\" variant=\"contained\">{type === 'create' ? 'Create new game' : 'Save changes'}</Button>\r\n\r\n  </form>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default GameForm;","import * as React from 'react';\r\nimport './Banner.css'\r\n\r\ninterface BannerProps {\r\n  name: string;\r\n  img:string;\r\n}\r\n\r\nconst Banner: React.FC<BannerProps> = ({name,img }) => {\r\n  \r\n  return <div className=\"bannerContainer\">\r\n\r\n      <img src={img} className=\"bannerImage\" />\r\n      \r\n  </div>;\r\n}\r\n\r\nexport default Banner;","import { Card, CardActionArea, CardMedia, CardContent, Typography } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ArenaElemObj } from '../../types/ArenaElemObj';\r\nimport { Link } from '../Link/Link';\r\nimport './Arenas.css'\r\n\r\nexport interface ArenasProps {\r\n\r\n  arenas: ArenaElemObj[];\r\n}\r\n\r\nconst Character: React.FC<ArenasProps> = ({ arenas }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleView = (id: number) => () => {\r\n\r\n    history.push(`/arena/${id}`);\r\n  }\r\n\r\n  return (<div className=\"ArenasContainer\">\r\n\r\n\r\n\r\n    {arenas.map((arena) => {\r\n     \r\n\r\n\r\n      return <Card key={arena.id}sx={{ maxWidth: 180 }} onClick={handleView(arena.id)} >\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            image={arena.img}\r\n            alt=\"\"\r\n          />\r\n          <CardContent\r\n\r\n            sx={{\r\n              bgcolor: \"#fff\"\r\n            }}\r\n          >\r\n            <Typography textAlign=\"center\" fontSize=\"1rem\" gutterBottom variant=\"h5\" component=\"div\">\r\n              {arena.name}\r\n            </Typography>\r\n\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n\r\n    })}\r\n  </div>)\r\n\r\n\r\n    ;\r\n}\r\n\r\nexport default Character;","import { Card, CardActionArea, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport { color } from '@mui/system';\r\nimport * as React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CharacterElemObj } from '../../types/CharacterElemObj';\r\nimport './Character.css'\r\n\r\nexport interface CharacterProps {\r\n\r\n  characters: CharacterElemObj[];\r\n}\r\n\r\nconst Character: React.FC<CharacterProps> = ({ characters }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleView = (id: number) => () => {\r\n\r\n    history.push(`/character/${id}`);\r\n  }\r\n\r\n  return (<div className=\"charactersContainer\">\r\n\r\n\r\n\r\n    {characters.map((char) => {\r\n\r\n      return <Card  key={char.id} sx={{ width: 150,minHeight:200 }  } onClick={handleView(char.id)}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"150\"\r\n            image={char.img}\r\n            alt=\"\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {char.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {/* {char.biography} */}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n\r\n\r\n      \r\n    })}\r\n  </div>)\r\n\r\n\r\n    ;\r\n}\r\n\r\nexport default Character;","import { Autocomplete, Button, TextField } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { tagOptions } from '../../types/TagOptions';\r\nimport { GameElemObj } from '../../types/GameElemObj';\r\nimport Arenas from '../Arenas/Arenas';\r\nimport Character from '../Character/Character';\r\nimport './Game_Details.css'\r\n\r\ninterface Game_DetailsProps {\r\n\r\n    list: GameElemObj[];\r\n    characterOptions: tagOptions[];\r\n    arenasOptions: tagOptions[];\r\n    onAddCharacters: (gameId: number, charactersId: number[]) => void;\r\n    onAddArenas: (gameId: number, arenasId: number[]) => void;\r\n    onEdit?: (id: number) => void;\r\n    onDelete?: (id: number) => void;\r\n}\r\n\r\nconst Game_Details: React.FC<Game_DetailsProps> = ({ list, characterOptions, arenasOptions, onAddCharacters, onAddArenas, onEdit , onDelete}) => {\r\n\r\n    const [charactersState, setCharactersState] = React.useState<number[]>([]);\r\n    const [arenasState, setArenasState] = React.useState<number[]>([]);\r\n\r\n    const handleTagsCharacter = (event: React.SyntheticEvent<Element, Event>, values: (tagOptions)[]) => {\r\n\r\n        const transformed = values.map((value) => {\r\n\r\n\r\n            return value.id;\r\n        });\r\n        setCharactersState(transformed);\r\n    };\r\n\r\n    const handleBtnAddCharacters = () => {\r\n\r\n        onAddCharacters(id, charactersState)\r\n    }\r\n\r\n    const handleTagsArenas = (event: React.SyntheticEvent<Element, Event>, values: (tagOptions)[]) => {\r\n        const transformed = values.map((value) => {\r\n            // si el valor es un string, quiere decir que el usurio está agregando una nueva opción\r\n\r\n            return value.id;\r\n        });\r\n        setArenasState(transformed);\r\n    };\r\n\r\n    const handleBtnAddArenas = () => {\r\n\r\n        onAddArenas(id, arenasState)\r\n    }\r\n    const handleEdit: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n        if (onEdit) {\r\n            onEdit(id);\r\n        }\r\n    }\r\n\r\n    const handleDelete: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n        if(onDelete) {\r\n          onDelete(id);\r\n        }\r\n      }\r\n\r\n\r\n    const { id: idString } = useParams<{ id: string }>();\r\n    const id = parseFloat(idString);\r\n\r\n    const elem = list.find((elem) => {\r\n\r\n        if (elem.id === id) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    if (!elem) {\r\n        return <Redirect to=\"/404\" />;\r\n    }\r\n\r\n    const { name, img, year, description, characters, arenas } = elem;\r\n\r\n    return <div className=\"gameDetail\">\r\n\r\n        <button onClick={handleEdit}>edit</button>\r\n        <button onClick={handleDelete}>delete</button>\r\n\r\n        <div className=\"imgContainer\">\r\n\r\n            <img src={img} className=\"imgDetail\" />\r\n            <h3 className=\"title\">{name}</h3>\r\n            <p className=\"year\">{year}</p>\r\n        </div>\r\n\r\n        <h4 className=\"subtitle\">Description</h4>\r\n\r\n        <p className=\"description\">{description}</p>\r\n\r\n        <section>\r\n            <h3 className=\"subtitle\">Personajes</h3>\r\n\r\n\r\n            <div className=\"characterContainer\">\r\n\r\n\r\n\r\n                <Character characters={characters}></Character>\r\n\r\n\r\n            </div>\r\n\r\n        </section>\r\n\r\n        <section>\r\n\r\n            <h3 className=\"subtitle\">Escenarios</h3>\r\n\r\n            <div className=\"scenaryContainer\">\r\n\r\n                <Arenas arenas={arenas}></Arenas>\r\n            </div>\r\n\r\n        </section>\r\n\r\n\r\n        {/* formulario personajes */}\r\n        <Autocomplete\r\n            multiple\r\n\r\n            disableClearable\r\n            style={{\r\n                width: \"100%\",\r\n            }}\r\n            id=\"combo-box-demo\"\r\n            options={characterOptions}\r\n            getOptionLabel={(option) => option.label}\r\n            renderInput={(params) => <TextField {...params} label=\"characters\" placeholder=\"Add a tag\" />}\r\n            onChange={handleTagsCharacter}\r\n            isOptionEqualToValue={(option, value) => {\r\n                return option.label === value.label;\r\n            }}\r\n        />\r\n\r\n        <Button variant=\"contained\" onClick={handleBtnAddCharacters}>Submit</Button>\r\n\r\n        {/* formulario arenas */}\r\n\r\n        <h2 className=\"subtitle\">Arenas</h2>\r\n        <Autocomplete\r\n            multiple\r\n\r\n            disableClearable\r\n            style={{\r\n                width: \"100%\",\r\n\r\n            }}\r\n            id=\"combo-box-demo\"\r\n            options={arenasOptions}\r\n            getOptionLabel={(option) => option.label}\r\n            renderInput={(params) => <TextField {...params} label=\"arenas\" placeholder=\"Add a tag\" />}\r\n            onChange={handleTagsArenas}\r\n            //value={tags as any}\r\n            isOptionEqualToValue={(option, value) => {\r\n                return option.label === value.label;\r\n            }}\r\n        />\r\n\r\n        <Button variant=\"contained\" onClick={handleBtnAddArenas}>Submit</Button>\r\n\r\n\r\n    </div>;\r\n}\r\n\r\nexport default Game_Details;","import { Button, TextField } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CharacterElemObj } from '../../types/CharacterElemObj';\r\nimport './CharacterForm.css'\r\n\r\n\r\n\r\ninterface CharacterFormProps {\r\n  editId: number | null;\r\n  onCreate: (newCharaterElem: CharacterElemObj) => void;\r\n  onEdit: (id: number, editCharacterElem: { name: string, realm: string, img: string, biography: string }) => void;\r\n  type: 'create' | 'edit';\r\n  characterElems: CharacterElemObj[];\r\n}\r\n\r\nconst CharacterForm: React.FC<CharacterFormProps> = ({ onCreate, onEdit, characterElems, editId, type }) => {\r\n\r\n\r\n  const history = useHistory();\r\n\r\n  const editElem = characterElems.find((elem) => {\r\n    return elem.id === editId;\r\n  });\r\n\r\n  \r\n  const [name, setName] = React.useState(editElem?.name || '');;\r\n  const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n  \r\n  const [realm, setRealm] = React.useState(editElem?.realm || '');\r\n  const handleRealmChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setRealm(event.target.value);\r\n  }\r\n\r\n\r\n  const [img, setImg] = React.useState(editElem?.img || '');\r\n  const handleImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setImg(event.target.value);\r\n  }\r\n\r\n  const [biography, setBiography] = React.useState(editElem?.biography || '');\r\n  const handleBiographyChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setBiography(event.target.value);\r\n  }\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    if (name === '' || biography === \"\" || realm === \"\" || img === \"\") {\r\n\r\n      alert(\"Please enter all fields\")\r\n    } else {\r\n\r\n      if (type === \"create\") {\r\n        onCreate({\r\n          id: Math.random(),\r\n          name: name,\r\n          img: img,\r\n          realm: realm,\r\n          biography: biography\r\n\r\n        });\r\n      }\r\n      else if (type === \"edit\") {\r\n\r\n        onEdit(editId!, { name: name, realm: realm, img: img, biography: biography });\r\n        history.push('/characters');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (<form className=\"GameForm\" onSubmit={handleSubmit}>\r\n\r\n    <TextField id=\"outlined-basic\" label=\"Character name\" variant=\"outlined\" onChange={handleNameChange} value={name} />\r\n    <TextField id=\"outlined-basic\" label=\"Image url\" variant=\"outlined\" onChange={handleImgChange} value={img} />\r\n    <TextField id=\"outlined-basic\" label=\"Realm\" variant=\"outlined\" onChange={handleRealmChange} value={realm} />\r\n    <TextField id=\"outlined-basic\" label=\"Biography\" variant=\"outlined\" onChange={handleBiographyChange} value={biography} />\r\n    <Button type=\"submit\" variant=\"contained\">{type === 'create' ? 'Create new character' : 'Save changes'}</Button>\r\n\r\n\r\n  </form>);\r\n}\r\n\r\n\r\nexport default CharacterForm;","import * as React from 'react';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { CharacterElemObj } from '../../types/CharacterElemObj';\r\nimport { GameElemObj } from '../../types/GameElemObj';\r\nimport GameCard from '../GameCard/GameCard';\r\nimport './Character_Details.css';\r\ninterface Character_DetailsProps {\r\n\r\n  list: CharacterElemObj[];\r\n  games: GameElemObj[];\r\n  onEdit?: (id: number) => void;\r\n}\r\n\r\nconst Character_Details: React.FC<Character_DetailsProps> = ({ list, games, onEdit }) => {\r\n\r\n  const { id: idString } = useParams<{ id: string }>();\r\n  const id = parseFloat(idString);\r\n\r\n  const gamesArena: GameElemObj[] = [];\r\n\r\n  const handleEdit: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n    if (onEdit) {\r\n      onEdit(id);\r\n    }\r\n  }\r\n  games.map(game => {\r\n\r\n    game.arenas.map(gameArena => {\r\n      if (gameArena.id === id) {\r\n\r\n        gamesArena.push(game);\r\n      }\r\n\r\n    });\r\n  });\r\n\r\n  const elem = list.find((elem) => {\r\n\r\n    if (elem.id === id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  if (!elem) {\r\n    return <Redirect to=\"/404\" />;\r\n  }\r\n\r\n\r\n  const { name, img, realm, biography } = elem;\r\n  return <div className=\"characterDetail\">\r\n\r\n    <button onClick={handleEdit}>edit</button>\r\n\r\n    <div className=\"characterDetail__header\">\r\n\r\n      <img src={img} alt=\"\" />\r\n      <h4 className=\"characterName\">{name}</h4>\r\n    </div>\r\n\r\n    <div className=\"characterDetail__info\">\r\n\r\n      <p>Reino : {realm}</p>\r\n    </div>\r\n    <div className=\"characterDetail__Biography\">\r\n\r\n      <h2>Biografia</h2>\r\n\r\n      <p className=\"biography\">{biography}</p>\r\n\r\n    </div>\r\n  \r\n      <div className=\"game-characterContainer\">\r\n\r\n      <h2>Apariciones</h2>\r\n\r\n      {gamesArena.map((game) => {\r\n\r\n        return <GameCard key={game.id} id={game.id} name={game.name} img={game.img}></GameCard>\r\n\r\n      })}\r\n\r\n\r\n    </div>\r\n  </div>;\r\n}\r\n\r\nexport default Character_Details;","import * as React from 'react';\r\nimport { ArenaElemObj } from '../../types/ArenaElemObj';\r\nimport './ArenasForm.css'\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport { TagOption } from '../../types/TagOption';\r\nimport { Button } from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\ninterface ArenasFormProps {\r\n  editId: number | null;\r\n  onCreate: (newArenasElem: ArenaElemObj) => void;\r\n  onEdit: (id: number, editCharacterElem: { name: string, description: string, img: string }) => void;\r\n  addTagOption: (newTagOption: TagOption) => void;\r\n  tagOptions: TagOption[];\r\n  type: 'create' | 'edit';\r\n  arenaElems: ArenaElemObj[];\r\n}\r\n\r\nconst ArenasForm: React.FC<ArenasFormProps> = ({ onCreate, addTagOption, tagOptions, onEdit, arenaElems, editId, type }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const editElem = arenaElems.find((elem) => {\r\n    return elem.id === editId;\r\n  });\r\n\r\n  const [name, setName] = React.useState(editElem?.name || '');\r\n  const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const [description, setDescription] = React.useState(editElem?.description || '');\r\n  const handleDescriptionChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n\r\n  const [img, setImg] = React.useState(editElem?.img || '');\r\n  const handleImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setImg(event.target.value);\r\n  }\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n    event.preventDefault();\r\n    const tagsStrings = tags.map((obj) => obj.label);\r\n\r\n    if (name === '' || description === \"\" || img === \"\") {\r\n\r\n      alert(\"Please enter all fields\")\r\n    } else {\r\n\r\n      if (type === \"create\") {\r\n\r\n\r\n        onCreate({\r\n          id: Math.random(),\r\n          name: name,\r\n          img: img,\r\n          description: description,\r\n          conceptArt: tagsStrings\r\n        });\r\n      }\r\n      else if (type === \"edit\") {\r\n\r\n        onEdit(editId!, { name: name, description: description, img: img });\r\n        history.push('/arenas');\r\n      }\r\n    }\r\n  }\r\n\r\n  const initialTags = [].map((tagString) => {\r\n    return {\r\n      label: tagString,\r\n    };\r\n  });\r\n\r\n  const [tags, setTags] = React.useState<TagOption[]>(initialTags);\r\n\r\n  const handleTagsChange = (event: React.SyntheticEvent<Element, Event>, values: (TagOption | string)[]) => {\r\n    const transformed = values.map((value) => {\r\n      // si el valor es un string, quiere decir que el usurio está agregando una nueva opción\r\n      if (typeof value === \"string\") {\r\n        const op = { label: value };\r\n        addTagOption(op); // agregamos la nueva opción a la lista general de opciones\r\n        return op;\r\n      }\r\n      return value;\r\n    });\r\n    setTags(transformed);\r\n  };\r\n\r\n  return (<form className=\"GameForm\" onSubmit={handleSubmit}>\r\n\r\n    <TextField id=\"outlined-basic\" label=\"Arena name\" variant=\"outlined\" onChange={handleNameChange} value={name} />\r\n    <TextField id=\"outlined-basic\" label=\"Image url\" variant=\"outlined\" onChange={handleImgChange} value={img} />\r\n    <TextField id=\"outlined-basic\" label=\"descripcion\" variant=\"outlined\" onChange={handleDescriptionChange} value={description} />\r\n    <Autocomplete\r\n      multiple\r\n      freeSolo\r\n      disableClearable\r\n      style={{\r\n        width: \"100%\",\r\n\r\n      }}\r\n      id=\"combo-box-demo\"\r\n      options={tagOptions}\r\n      renderInput={(params) => <TextField {...params} label=\"Tags\" placeholder=\"Add a tag\" />}\r\n      onChange={handleTagsChange}\r\n      value={tags as any}\r\n      isOptionEqualToValue={(option, value) => {\r\n        return option.label === value.label;\r\n      }}\r\n    />\r\n\r\n\r\n    <Button type=\"submit\" variant=\"contained\">{type === 'create' ? 'Create new arena' : 'Save changes'}</Button>\r\n\r\n\r\n  </form>);\r\n}\r\n\r\nexport default ArenasForm;","import { red } from \"@mui/material/colors\";\r\nimport {createTheme} from \"@mui/material/styles\";\r\n\r\nexport const theme = createTheme({\r\n   palette: {\r\n      primary: {\r\n         main: \"#c678dd\",\r\n         contrastText:\"#fff\",\r\n        \r\n      },\r\n      secondary: {\r\n         main: \"#1E1E1E\",\r\n      },\r\n   },\r\n});\r\n","import * as React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { ArenaElemObj } from '../../types/ArenaElemObj';\r\nimport { GameElemObj } from '../../types/GameElemObj';\r\nimport GameCard from '../GameCard/GameCard';\r\nimport './ArenaDetails.css'\r\n\r\ninterface ArenaDetailsProps {\r\n\r\n  arenas: ArenaElemObj[];\r\n  games: GameElemObj[];\r\n  onEdit?: (id: number) => void;\r\n}\r\n\r\nconst ArenaDetails: React.FC<ArenaDetailsProps> = ({ arenas, games,onEdit }) => {\r\n\r\n\r\n\r\n  const { id: idString } = useParams<{ id: string }>();\r\n  const id = parseFloat(idString);\r\n\r\n  const gamesArena: GameElemObj[] = [];\r\n  const handleEdit: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n    if (onEdit) {\r\n      onEdit(id);\r\n    }\r\n  }\r\n  games.map(game => {\r\n\r\n    game.arenas.map(gameArena => {\r\n        if(gameArena.id === id){\r\n\r\n          gamesArena.push(game) ;\r\n        }\r\n      \r\n    });\r\n  });\r\n\r\n  const elem = arenas.find((elem) => {\r\n\r\n    if (elem.id === id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  if (!elem) {\r\n    return <Redirect to=\"/404\" />;\r\n  }\r\n\r\n  \r\n  const { name, img, description, conceptArt } = elem;\r\n\r\n  return <div className=\"characterDetail\">\r\n\r\n    <button onClick={handleEdit}>edit</button>\r\n    <div className=\"imgContainerArena\">\r\n\r\n      <img src={img} className=\"imgDetail\" />\r\n      <h3 className=\"title\">{name}</h3>\r\n    </div>\r\n\r\n\r\n    <div className=\"Arena__Description\">\r\n\r\n      <h2>Description</h2>\r\n\r\n      <p className=\"description\">{description}</p>\r\n\r\n    </div>\r\n\r\n    <div className=\"conceptArtSection\">\r\n\r\n      <h2>Concept art</h2>\r\n\r\n      <div className=\"conceptArtContainer\">\r\n\r\n        {conceptArt.map((concept,i) => {\r\n\r\n          return <div key={i} className=\"conceptArt\">\r\n\r\n            <img src={concept} alt=\"\" />\r\n          </div>\r\n\r\n        })}\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div className=\"juegos\">\r\n\r\n      <h2>Apariciones</h2>\r\n\r\n      <div className=\"apariciones\">\r\n\r\n        {gamesArena.map((game) => {\r\n\r\n          return <GameCard key={game.id} id={game.id} name={game.name} img={game.img}></GameCard>\r\n\r\n        })}\r\n\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  </div>;;\r\n}\r\n\r\nexport default ArenaDetails;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport GameCard, { GameCardProps } from './components/GameCard/GameCard';\nimport GameForm from './components/GameForm/GameForm';\nimport Banner from './components/Banner/Banner';\nimport { HashRouter, Route, Redirect, Switch, useHistory } from 'react-router-dom'\nimport Game_Details from './components/Game_Details/Game_Details';\nimport { GameElemObj } from './types/GameElemObj';\nimport Character from './components/Character/Character';\nimport { CharacterElemObj } from './types/CharacterElemObj';\nimport CharacterForm from './components/CharacterForm/CharacterForm';\nimport Character_Details from './components/Character_Details/Character_Details';\nimport { ArenaElemObj } from './types/ArenaElemObj';\nimport ArenasForm from './components/ArenasForm/ArenasForm';\nimport Arenas from './components/Arenas/Arenas';\nimport { TagOption } from './types/TagOption';\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from './utils/theme';\nimport { tagOptions } from './types/TagOptions';\nimport ArenaDetails from './components/ArenaDetails/ArenaDetails';\nimport { Bar } from 'react-chartjs-2';\nimport { getChartData } from './utils/getChartData';\n\n\n\nfunction App() {\n\n  const history = useHistory();\n\n  const [gameFormType, setGameFormType] = React.useState<'create' | 'edit'>('create');\n  const [characterFormType, setCharacterFormType] = React.useState<'create' | 'edit'>('create');\n  const [arenaFormType, setArenaFormType] = React.useState<'create' | 'edit'>('create');\n\n  const [editIdGame, setEditIdGame] = React.useState<number | null>(null);\n  const [editIdArena, setEditIdArena] = React.useState<number | null>(null);\n  const [editIdCharacter, setEditIdCharacter] = React.useState<number | null>(null);\n\n  const [gameElems, setGameElems] = React.useState<GameElemObj[]>([\n\n    {\n      id: 1,\n      name: \"Mortal Kombat 11\",\n      year: 2011,\n      img: \"https://f3.trucoteca.com/fotos/7589/med/mortal-kombat-shaolin-monks-1.jpg\",\n      description: `Mortal Kombat 11 es la nueva entrega de la violenta y salvaje \n      saga de lucha de NetherRealm Studios para consolas y PC. Se trata de la undécima \n      secuela de una serie de títulos de combate y peleas de marcada estructura 2D, que\n       en esta ocasión, además de añadir los mejores gráficos de la serie y el gore más\n        descarnado en los llamados Fatality, presentará luchadores clásicos y nuevos, \n        más modos de juego y una oferta online que quiere marcar un antes y un después en los eSports.`,\n      characters: [],\n      arenas: []\n    },\n\n    {\n      id: 2,\n      name: \"Mortal deadly Aliance\",\n      year: 2006,\n      img: \"https://www.ecured.cu/images/1/1e/Mortal_kombat_deadly_alliance.jpg\",\n      description: `Mortal Kombat 11 es la nueva entrega de la violenta y salvaje \n      saga de lucha de NetherRealm Studios para consolas y PC. Se trata de la undécima \n      secuela de una serie de títulos de combate y peleas de marcada estructura 2D, que\n       en esta ocasión, además de añadir los mejores gráficos de la serie y el gore más\n        descarnado en los llamados Fatality, presentará luchadores clásicos y nuevos, \n        más modos de juego y una oferta online que quiere marcar un antes y un después en los eSports.`,\n      characters: [],\n      arenas: []\n    },\n    {\n      id: 3,\n      name: \"Mortal Kombat Armageddon\",\n      year: 2005,\n      img: \"https://m.media-amazon.com/images/I/513Y2Biv88L._SY445_.jpg\",\n      description: `Mortal Kombat 11 es la nueva entrega de la violenta y salvaje \n      saga de lucha de NetherRealm Studios para consolas y PC. Se trata de la undécima \n      secuela de una serie de títulos de combate y peleas de marcada estructura 2D, que\n       en esta ocasión, además de añadir los mejores gráficos de la serie y el gore más\n        descarnado en los llamados Fatality, presentará luchadores clásicos y nuevos, \n        más modos de juego y una oferta online que quiere marcar un antes y un después en los eSports.`,\n      characters: [],\n      arenas: []\n    }\n\n\n  ]);\n\n  const [charactersElems, setCharacters] = React.useState<CharacterElemObj[]>([\n    {\n      id: 0,\n      name: 'Liu Kang',\n      realm: \"EarthRealm\",\n      img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Anime_Expo_2014_Lui_Kang_Cosplay.jpg/245px-Anime_Expo_2014_Lui_Kang_Cosplay.jpg'\n\n    },\n    {\n      id: 1,\n      name: 'Shao Kahn',\n      realm: \"EarthRealm\",\n      img: 'https://pbs.twimg.com/media/FDSrsXOXIAcuPkk?format=jpg&name=large',\n      biography: \"Prior to the events of the game series, Shao Kahn was a warlord protecting Outworld and an advisor to the realm's ruler, Onaga. Eventually, Shao Kahn poisoned Onaga, claiming his throne and his armies. The Kahn continued to add lesser realms to Outworld, including Edenia; forcing Queen Sindel and Princess Kitana to become his wife and personal assassin respectively. Sindel killed herself to escape the emperor, but he kept her soul in Outworld. One of the backwards dialogues in Deception's Konquest Mode suggests that Shao Kahn is a god-like being like Lucifer and the thunder god Raiden Shao Kahn first appears in Mortal Kombat II as the game's final boss and main antagonist. After the crooked tournament Grandmaster Shang Tsung and his warriors lose to Earthrealm in Mortal Kombat, the Kahn invokes a tournament rematch clause which will allow him to take Earthrealm immediately if he wins. Though he lures Earthre\"\n\n    },\n\n    {\n      id: 2,\n      name: 'Sub Zero',\n      realm: \"EarthRealm\",\n      img: 'https://www.ecured.cu/images/0/00/Sub-Zero.jpg',\n      biography: `Kuai Liang más conocido como Sub-Zero y anteriormente como Tundra es un personaje ficticio de la saga de videojuegos Mortal Kombat. Sub-Zero es el personaje más popular en la serie de Mortal Kombat junto con Scorpion.2​\n\n      El personaje es un luchador formidable que posee la capacidad innata de controlar el hielo en muchas formas. En su primera aparición en Mortal Kombat II, se reveló que el Sub-Zero original había muerto durante los eventos del primer juego (de la mano de Scorpion) y fue reemplazado por su hermano. En los juegos posteriores, el hermano menor permaneció como Sub-Zero, mientras que el hermano mayor se convirtió en Noob Saibot. El rasgo más definitorio del personaje es su feroz rivalidad con su némesis Scorpion, la cual se terminó en Mortal Kombat X, cuando hicieron una tregua y se convirtieron en aliados.\n      \n      Uno de los pilares de la serie, Sub-Zero es uno de los tres únicos personajes que han aparecido en todos los principales juegos de Mortal Kombat (de una forma u otra).`\n\n    },\n\n\n  ]);\n\n  const [arenasElems, setArenas] = React.useState<ArenaElemObj[]>([\n    {\n      id: 0,\n      name: 'The pit',\n      description: \"EarthRealm\",\n      img: 'https://p4.wallpaperbetter.com/wallpaper/2/199/777/abstrsct-3840-x-2160-abstract-stage-wallpaper-preview.jpg',\n      conceptArt: [\"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\",\n        \"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\",\n        \"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\",\n        \"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\"\n      ]\n\n\n\n    },\n    {\n      id: 1,\n      name: 'Living Forest',\n      description: \" es un escenario disponible desde Mortal Kombat II. Como el nombre implícito sugiere, el lugar es descrito como un obscuro bosque con árboles vivos que tienden a rugir y a hacer muecas de malestar o intimidación. De acuerdo a ciertos pasajes del argumento del modo Konquest de Mortal Kombat Deception, el Bosque Viviente se encontraría próximo a la cuidad de Lei Chen, en Outworld, y en Mortal Kombat Shaolin Monks se muestra que una de sus ubicaciones es Reptile's Lair.\",\n      img: 'https://static.wikia.nocookie.net/mkwikia/images/7/72/Shao_Kahn%27s_Coliseum.jpg',\n      conceptArt: [\"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\",\n        \"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\",\n        \"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\",\n        \"https://www.giantbomb.com/a/uploads/original/0/7661/483925-pyramidofargus_concept.jpg\"\n      ]\n\n    }\n\n  ]);\n\n  const handleCreate = (newGameElem: GameCardProps) => {\n\n    const arrayCopy = gameElems.slice();\n    arrayCopy.push({\n      id: newGameElem.id,\n      img: newGameElem.img,\n      name: newGameElem.name,\n      year: newGameElem.year,\n      description: newGameElem.description,\n      characters: [],\n      arenas: []\n    });\n\n\n    setGameElems(arrayCopy);\n  }\n\n  const handleBeginEdit = (editId: number) => {\n    setEditIdGame(editId);\n    setGameFormType('edit');\n    history.push('/form');\n\n  }\n  const handleBeginEditArena = (editId: number) => {\n    setEditIdArena(editId);\n    setArenaFormType('edit');\n    history.push('/form');\n\n  }\n\n  const handleBeginEditCharacter = (editId: number) => {\n    setEditIdCharacter(editId);\n    setCharacterFormType('edit');\n    history.push('/form');\n\n  }\n\n\n  const handleEditGame = (editId: number, editgamesElems: { name: string, description: string }) => {\n\n    const gameElemsCopy = gameElems.slice();\n    const editIndex = gameElems.findIndex((elem) => {\n      if (elem.id === editId) {\n        return true;\n      }\n      return false;\n    });\n\n    gameElemsCopy[editIndex] = {\n      ...gameElems[editIndex],\n      ...editgamesElems,\n    }\n\n    setGameElems(gameElemsCopy);\n    setGameFormType('create');\n    setEditIdGame(null);\n  }\n\n  const handleEditArena = (editId: number, editarenaElems: { name: string, description: string, img: string }) => {\n\n    const arenaElemsCopy = arenasElems.slice();\n    const editIndex = arenasElems.findIndex((elem) => {\n      if (elem.id === editId) {\n        return true;\n      }\n      return false;\n    });\n\n    arenaElemsCopy[editIndex] = {\n      ...arenasElems[editIndex],\n      ...editarenaElems,\n    }\n\n    setArenas(arenaElemsCopy);\n    setArenaFormType('create');\n    setEditIdArena(null);\n  }\n\n  const handleEditCharacter = (editId: number, editcharacterElems: { name: string, realm: string, img: string, biography: string }) => {\n\n    const characterElemsCopy = charactersElems.slice();\n    const editIndex = charactersElems.findIndex((elem) => {\n      if (elem.id === editId) {\n        return true;\n      }\n      return false;\n    });\n\n    characterElemsCopy[editIndex] = {\n      ...charactersElems[editIndex],\n      ...editcharacterElems,\n    }\n\n    setCharacters(characterElemsCopy);\n    setCharacterFormType('create');\n    setEditIdCharacter(null);\n\n\n  }\n\n  const initialCharacters: tagOptions[] = [];\n  charactersElems.map((char) => {\n\n    initialCharacters.push({ label: char.name, id: char.id });\n\n  });\n\n  const initialArenas: tagOptions[] = [];\n  arenasElems.map((arena) => {\n\n    initialArenas.push({ label: arena.name, id: arena.id });\n\n  });\n\n  const [characterOptions, setCharacterOptions] = React.useState<tagOptions[]>(initialCharacters);\n\n  const handleAddCharacterOption = (newCharacterOption: tagOptions) => {\n    setCharacterOptions([...characterOptions, newCharacterOption]);\n  };\n\n  const [arenasOptions, setArenasOptions] = React.useState<tagOptions[]>(initialArenas);\n\n  const handleAddArenaOption = (newArenaOption: tagOptions) => {\n    setArenasOptions([...arenasOptions, newArenaOption]);\n  };\n\n\n\n\n\n  const handleCharacterCreate = (newCharaterElem: CharacterElemObj) => {\n\n    const arrayCopy = charactersElems.slice();\n    arrayCopy.push({\n      id: newCharaterElem.id,\n      img: newCharaterElem.img,\n      name: newCharaterElem.name,\n      realm: newCharaterElem.realm,\n      biography: newCharaterElem.biography\n    });\n\n\n    setCharacters(arrayCopy);\n    handleAddCharacterOption({ label: newCharaterElem.name, id: newCharaterElem.id })\n  }\n\n  const [tagOptions, setTagOptions] = React.useState<TagOption[]>([\n\n  ]);\n\n  const handleAddTagOption = (newTagOption: TagOption) => {\n    setTagOptions([...tagOptions, newTagOption]);\n  };\n\n\n\n\n  const handleArenasCreate = (newArenasElem: ArenaElemObj) => {\n\n    const arrayCopy = arenasElems.slice();\n    arrayCopy.push({\n      id: newArenasElem.id,\n      img: newArenasElem.img,\n      name: newArenasElem.name,\n      description: newArenasElem.description,\n      conceptArt: newArenasElem.conceptArt\n\n    });\n    setArenas(arrayCopy);\n\n    handleAddArenaOption({ label: newArenasElem.name, id: newArenasElem.id })\n  }\n  const data = getChartData(charactersElems, gameElems);\n  const addArenas = (gameId: number, arenasId: number[]) => {\n\n    const arrayCopy = gameElems.slice();\n    const editIndex = gameElems.findIndex((elem) => {\n      if (elem.id === gameId) {\n        return true;\n      }\n      return false;\n    });\n\n    const arenasObj: ArenaElemObj[] = [];\n    arenasId.map((id) => {\n\n      arenasElems.map((arena) => {\n\n        if (arena.id === id) {\n          arenasObj.push(arena);\n        }\n      })\n\n\n    })\n\n    arrayCopy[editIndex] = {\n      ...gameElems[editIndex],\n      arenas: arenasObj\n    }\n\n    setGameElems(arrayCopy);\n\n\n  }\n\n  const handleDelete = (deleteId: number) => {\n\n    const gameElemsCopy = gameElems.filter((elem) => {\n      if (elem.id === deleteId) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setGameElems(gameElemsCopy);\n    history.push('/home');\n  }\n  const addCharacters = (gameId: number, charactersId: number[]) => {\n\n    const arrayCopy = gameElems.slice();\n    const editIndex = gameElems.findIndex((elem) => {\n      if (elem.id === gameId) {\n        return true;\n      }\n      return false;\n    });\n\n    const charactersObj: CharacterElemObj[] = gameElems[editIndex].characters;\n\n    let charExist = false;\n    gameElems[editIndex].characters.map(character => {\n\n      charactersId.map(id => {\n\n        if (character.id === id) {\n\n          charExist = true;\n        }\n\n      });\n\n    })\n    charactersId.map((id) => {\n\n      charactersElems.map((char) => {\n\n        if (char.id === id) {\n          charactersObj.push(char);\n        }\n      })\n\n\n    })\n\n    arrayCopy[editIndex] = {\n      ...gameElems[editIndex],\n      characters: charactersObj\n    }\n\n    setGameElems(arrayCopy);\n\n\n  }\n\n\n  return (\n\n    <ThemeProvider theme={theme}>\n\n      <div className=\"App\">\n\n        <Header></Header>\n        <Switch>\n          <Route path=\"/form\">\n            <h2> juego</h2>\n            <GameForm onEdit={handleEditGame} onCreate={handleCreate} editId={editIdGame} type={gameFormType} gameElems={gameElems} />\n            <h2> personaje</h2>\n            <CharacterForm onEdit={handleEditCharacter} onCreate={handleCharacterCreate} editId={editIdCharacter} type={characterFormType} characterElems={charactersElems} />\n            <h2> arena</h2>\n            <ArenasForm type={arenaFormType} onEdit={handleEditArena} editId={editIdArena} onCreate={handleArenasCreate} addTagOption={handleAddTagOption} arenaElems={arenasElems} tagOptions={tagOptions}></ArenasForm>\n          </Route>\n\n\n          <Route path=\"/home\">\n\n            <Banner name=\"Mk Deception\" img=\"https://f3.trucoteca.com/fotos/6746/mortal-komat-deception-11.jpg\"></Banner>\n\n            <Bar data={data} options={{\n\n              indexAxis: 'y',\n              // Elements options apply to all of the options unless overridden in a dataset\n              // In this case, we are setting the border of each horizontal bar to be 2px wide\n              elements: {\n                bar: {\n                  borderWidth: 2,\n                },\n              },\n              responsive: true,\n              plugins: {\n                legend: {\n                  position: 'right',\n                },\n                title: {\n                  display: true,\n                  text: 'personajes con mas apariciones',\n                },\n              },\n            }} />\n\n            <h3 className=\"juegosDestacados\">Juegos Destacados</h3>\n            <article className=\"gallery\">\n\n              <section className=\"popularGames\">\n\n                {gameElems.map((elem) => {\n\n                  return <GameCard key={elem.id} id={elem.id} name={elem.name} img={elem.img} />;\n                })}\n              </section>\n            </article>\n          </Route>\n\n          <Route path=\"/details/:id\">\n            <Game_Details onDelete={handleDelete} onEdit={handleBeginEdit} onAddCharacters={addCharacters} onAddArenas={addArenas} list={gameElems} characterOptions={characterOptions} arenasOptions={arenasOptions}></Game_Details>\n          </Route>\n\n          <Route path=\"/character/:id\">\n            <Character_Details onEdit={handleBeginEditCharacter} games={gameElems} list={charactersElems}></Character_Details>\n          </Route>\n          <Route path=\"/arena/:id\">\n            <ArenaDetails onEdit={handleBeginEditArena} games={gameElems} arenas={arenasElems}></ArenaDetails>\n          </Route>\n\n\n\n          <Route path=\"/characters\" exact>\n\n            <Character\n              characters={charactersElems}\n            ></Character>\n          </Route>\n\n          <Route path=\"/arenas\" exact>\n            <Arenas arenas={arenasElems}></Arenas>\n\n          </Route>\n        </Switch>\n\n\n      </div>\n\n    </ThemeProvider>\n  );\n\n}\n\n\nexport default App;\n","//import { MusicElemObj } from '../types/MusicElemObj';\r\n\r\nimport { CharacterElemObj } from \"../types/CharacterElemObj\";\r\nimport { GameElemObj } from \"../types/GameElemObj\";\r\n\r\nexport const getChartData = (characterElems: CharacterElemObj[], gameElems: GameElemObj[]) => {\r\n\r\n  const counters2: {[key: string]: number} = {}\r\n  const counters: number[] = [];\r\n\r\n  const characterNames: string[] = [];\r\n\r\n    characterElems.forEach(character => {\r\n\r\n      characterNames.push(character.name);\r\n  });\r\n\r\n  console.log(characterNames)\r\n  characterNames.forEach((name) => {\r\n\r\n    console.log(name);\r\n    gameElems.forEach((game) => {\r\n\r\n      game.characters.forEach((elem) => {\r\n\r\n        let rep=0;\r\n        if (elem.name === name) {\r\n\r\n          if(counters2[name]) {\r\n            counters2[name]++;\r\n          } else {\r\n            counters2[name] = 1;\r\n          }\r\n          \r\n        }\r\n        console.log(name + rep)\r\n        counters.push(rep);\r\n        \r\n      });\r\n\r\n    });\r\n   \r\n  });\r\n  return {\r\n    labels:characterNames,\r\n    datasets: [\r\n      {\r\n        label: '# de apariciones',\r\n        data: Object.values(counters2),\r\n        backgroundColor: ['rgba(54, 162, 235, 0.2)'],\r\n        borderColor: ['rgba(54, 162, 235, 1)'],\r\n      },\r\n    ],\r\n  };\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}