{"version":3,"sources":["components/Link/Link.tsx","components/Header/logomk.svg","components/Header/Header.tsx","components/GameCard/GameCard.tsx","components/GameForm/GameForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Link","props","className","active","href","url","text","Header","src","logomk","alt","GameCard","name","img","GameForm","onCreate","React","setName","setImg","onSubmit","event","preventDefault","placeholder","type","onChange","target","value","App","useState","gameElems","setGameElems","newGameElem","arrayCopy","slice","push","id","Math","random","map","elem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUASaA,EAA4B,SAACC,GAEtC,IAAIC,EAAY,OAKhB,OAHID,EAAME,SACND,GAAa,gBAEV,mBAAGA,UAAWA,EAAWE,KAAMH,EAAMI,IAArC,SAA2CJ,EAAMK,QChB7C,MAA0B,mCCqB1BC,G,MAZuB,SAAC,GAEnC,OAF4C,eAErC,yBAAQL,UAAU,YAAlB,UACH,qBAAKA,UAAU,gBAAf,SACA,qBAAKA,UAAU,OAAOM,IAAKC,EAAQC,IAAI,OAEvC,cAAC,EAAD,CAAMJ,KAAK,SAASD,IAAI,KACxB,cAAC,EAAD,CAAMC,KAAK,aAAaD,IAAI,KAC5B,cAAC,EAAD,CAAMC,KAAK,aAAaD,IAAI,UCGrBM,G,MAZ2B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,KAAKC,EAAS,EAATA,IAE/C,OAAO,sBAAKX,UAAU,WAAf,UAEH,qBAAKA,UAAU,kBAAkBM,IAAKK,EAAKH,IAAI,KAC/C,mBAAGR,UAAU,iBAAb,SAA+BU,SCiCtBE,G,MArC2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAG3C,EAAwBC,WAAe,IAAvC,mBAAOJ,EAAP,KAAaK,EAAb,KAMA,EAAsBD,WAAe,IAArC,mBAAOH,EAAP,KAAYK,EAAZ,KAcA,OAAQ,uBAAMhB,UAAU,WAAWiB,SAT2B,SAACC,GAC7DA,EAAMC,iBAENN,EAAS,CACPH,KAAMA,EACNC,IAAKA,KAID,UAER,uBAAOS,YAAY,YAAYC,KAAK,OAAOC,SArB0B,SAACJ,GACpEH,EAAQG,EAAMK,OAAOC,QAoBgDA,MAAOd,IAC9E,uBAAOU,YAAY,YAAWC,KAAK,OAAOC,SAhB0B,SAACJ,GACnEF,EAAOE,EAAMK,OAAOC,QAe+CA,MAAOb,IAC5E,iDCsBac,MA9Cf,WAEE,MAAoCX,IAAMY,SAAwB,IAAlE,mBAAQC,EAAR,KAAmBC,EAAnB,KAuBA,OACE,sBAAK5B,UAAU,MAAf,UAEC,cAAC,EAAD,IAED,cAAC,EAAD,CAAUa,SA3BS,SAACgB,GAEpB,IAAMC,EAAYH,EAAUI,QAC5BD,EAAUE,KAAK,CACbC,GAAGC,KAAKC,SACRxB,IAAKkB,EAAYlB,IACjBD,KAAMmB,EAAYnB,OAGN,sBACTiB,GADS,CAEZ,CAEEhB,IAAKkB,EAAYlB,IACjBD,KAAMmB,EAAYnB,QAGtBkB,EAAaE,MAWZ,oBAAI9B,UAAU,mBAAd,+BACC,yBAASA,UAAU,UAAnB,SAED,yBAASA,UAAU,eAAnB,SAEC2B,EAAUS,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAwB3B,KAAM2B,EAAK3B,KAAMC,IAAK0B,EAAK1B,KAApC0B,EAAKJ,eCnCpBK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9e019491.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Link.css'\r\n\r\ninterface LinkProps {\r\n    text: string;\r\n    active?: boolean;\r\n    url: string;\r\n}\r\n\r\nexport const Link: React.FC<LinkProps> = (props) => {\r\n\r\n    let className = \"Link\";\r\n\r\n    if (props.active) {\r\n        className += \" Link-active\";\r\n    }\r\n    return <a className={className} href={props.url}>{props.text}</a>;\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logomk.4640112d.svg\";","import React from \"react\";\r\nimport { Link } from '../Link/Link';\r\nimport logomk from './logomk.svg'\r\nimport './Header.css'\r\n\r\ninterface HeaderProps {\r\n\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ }) => {\r\n\r\n    return <header className=\"headerApp\">\r\n        <div className=\"logoContainer\">\r\n        <img className=\"logo\" src={logomk} alt=\"\" />\r\n        </div>\r\n        <Link text=\"Juegos\" url=\"\" ></Link>\r\n        <Link text=\"Escenarios\" url=\"\" ></Link>\r\n        <Link text=\"Personajes\" url=\"\" ></Link>\r\n    </header>;\r\n}\r\n\r\nexport default Header;","import * as React from 'react';\r\nimport './GameCard.css'\r\n\r\nexport interface GameCardProps {\r\n  name: string;\r\n  img:string;\r\n}\r\n\r\nconst GameCard: React.FC<GameCardProps> = ({name,img}) => {\r\n  \r\n  return <div className=\"gameCard\">\r\n\r\n      <img className=\"gameCard__image\" src={img} alt=\"\" />\r\n      <p className=\"gameCard__name\">{name}</p>\r\n\r\n  </div>\r\n  \r\n  ;\r\n}\r\n\r\nexport default GameCard;","import * as React from 'react';\r\nimport { GameCardProps } from '../GameCard/GameCard'\r\nimport './GameForm.css'\r\n\r\ninterface GameFormProps {\r\n  onCreate: (newGameElem: GameCardProps) => void;\r\n\r\n}\r\n\r\nconst GameForm: React.FC<GameFormProps> = ({ onCreate }) => {\r\n\r\n\r\n  const [name, setName] = React.useState('');\r\n  const handleNameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n\r\n  const [img, setImg] = React.useState('');\r\n  const handleImgChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setImg(event.target.value);\r\n  }\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    onCreate({\r\n      name: name,\r\n      img: img\r\n    });\r\n  }\r\n\r\n  return (<form className=\"GameForm\" onSubmit={handleSubmit}>\r\n\r\n  <input placeholder=\"Game name\" type=\"text\" onChange={handleNameChange} value={name} />\r\n  <input placeholder=\"Image url\"type=\"text\" onChange={handleImgChange} value={img} />\r\n  <button>Submit</button>\r\n\r\n  </form>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default GameForm;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport GameCard, { GameCardProps } from './components/GameCard/GameCard';\nimport GameForm from './components/GameForm/GameForm';\n\ntype GameElemObj = GameCardProps&{\n\n  id: number;\n}\n\nfunction App() {\n\n  const [ gameElems, setGameElems ] = React.useState<GameElemObj[]>([]);\n  const handleCreate = (newGameElem: GameCardProps) => {\n  \n    const arrayCopy = gameElems.slice(); \n    arrayCopy.push({ \n      id:Math.random(),\n      img: newGameElem.img,\n      name: newGameElem.name\n    });\n  \n    const newArray = [\n      ...gameElems, \n      { \n        \n        img: newGameElem.img,\n        name: newGameElem.name\n      }\n    ];\n    setGameElems(arrayCopy);\n  }\n\n\n\n  return (\n    <div className=\"App\">\n\n     <Header></Header>\n     \n    <GameForm onCreate={handleCreate} />\n     <h3 className=\"juegosDestacados\">Juegos Destacados</h3>\n      <article className=\"gallery\">\n        \n     <section className=\"popularGames\">\n    \n     {gameElems.map((elem) => {\n        return <GameCard key={elem.id} name={elem.name} img={elem.img} />;\n      })}\n       </section> \n       </article>\n     \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}